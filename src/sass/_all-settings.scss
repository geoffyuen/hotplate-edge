// Hotplate variables

// Typography - applied in _html.scss
$hp-basefontsize: 10px; // Base root size applied to <html> - 10 makes it easier to use em/rems;
$hp-mobilefontsize: 1.4rem; // font size for mobile applied to <body>
$hp-fontsize: 1.6rem; // font size for mobile applied to <body> at a media query
$hp-fonts: sans-serif;
$hp-headline-fonts: sans-serif;

// Hotplate grid
$hp-gutter: 1.4rem; // Gutter will be double this value!

// Breakpoints
$xl: 1140px;
$lg: 960px;
$md: 768px;
$sm: 620px;
$xs: 480px;
// iphone6+?
$xxs:320px;

$mq: (
	// iphone6+?
	xxs:320px,
	xs: 480px,
	sm: 620px,
	md: 768px,
	lg: 960px,
	xl: 1140px
);
// Wrapper max-width
$hp-maxwidth: mq(xl);

// return mq from $mq;
@function mq($mediaquery) {
	@return map-get($mq, $mediaquery);
}

// mobile-first media query
@mixin media($mediawidth: md) {
	@if map-has-key($mq, $mediawidth) {
		@media (min-width: mq($mediaquery)) {
			@content;
		}
	}
	@else {
		@media (min-width: $mediawidth) {
			@content;
		}
	}
}

@mixin undermedia($mediawidth: $md) {
	@if map-has-key($mq, $mediawidth) {
		@media (min-width: (mq($mediaquery)-1)) {
			@content;
		}
	}
	@else {
		@media (max-width: $mediawidth - 1) {
			@content;
		}
	}
}

// return mq from $mq;
@function colwidth($totalcolumns: 3, $numbofcolumns: 1) {
	@return 100% / $totalcolumns * $numbofcolumns;
}
// Use this to define non-first mobile first columns

// Column with margins
@mixin col($totalcolumns: 3, $numbofcolumns: 1) {
	width: colwidth($totalcolumns, $numbofcolumns);
}

// Column without margins (used when columns is commbined with wrapper)
@mixin fcol($totalcolumns: 3, $numbofcolumns: 1) {
	width: calc(#{colwidth($totalcolumns, $numbofcolumns)} - #{$hp-gutter * 2});
}

@mixin hpad($lpad, $rpad: $lpad) {
	padding-left: $lpad;
	padding-right: $rpad;
}
@mixin vpad($tpad, $bpad: $tpad) {
	padding-top: $tpad;
	padding-bottom: $bpad;
}
@mixin hmargin($lpad, $rpad: $lpad) {
	margin-left: $lpad;
	margin-right: $rpad;
}
@mixin vmargin($tpad, $bpad: $tpad) {
	margin-top: $tpad;
	margin-bottom: $bpad;
}