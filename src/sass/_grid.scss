// This is a flexbox system that uses margins for gutters instead of padding.
// It uses calc() to compensate for the margins and you can nest the grid.
// With this grid you can set custom padding, box-shadow and background-colors
// on the columns

%column {
	@include hmargin($hp-gutter);
	width: calc(100% - #{$hp-gutter * 2});
	flex: 0 0 auto;
	&.wrapper {
		width: 100%;
	}
}



// preset column classes ala bootstrap - granular control of columns

$bp: (
	// xxs :1px,
	xs :$xs,
	sm :$sm,
	md :$md,
	lg :$lg,
	xl :$xl,
);

@mixin columncompiler($name) {
	.#{$name}-only {
			display: initial;
	}
	.#{$name}-hide {
			display: none;
	}
	@for $i from 1 through 12 {
		.col-#{$name}-#{$i} {
			@include fcol(12,$i);
			&.wrapper {
				@include col(12,$i);
			}
		}
	}
}

// XXS NEEDS NO MEDIA QUERIES
@for $i from 1 through 12 {
	.col-xxs-#{$i} {
		@extend %column;
	}
}
@include columncompiler('xxs');


// COMPILE THE OTHER COLUMNS WITH MEDIA QUERIES
@each $name, $mq in $bp {

	// MOBILE FIRST
	.#{$name}-only {
		display: none;
	}
	.#{$name}-hide {
		display: block;
	}
	@for $i from 1 through 12 {
		.col-#{$name}-#{$i} {
			@extend %column;
		}
	}
	// MOBILE FIRST END

	// MEDIA QUERIED
	@include media(#{$mq}) {
		@include columncompiler($name);
	}

}

// preset column classes ala skeleton - < tablet = 1 col
// this is just the same thing as .col-md-*
@for $i from 1 through 12 {
	.col-#{$i} {
		@extend .col-md-#{$i};
	}
}

// column that fills remain horz space
.col-fill {
	@include hmargin($hp-gutter);
	flex: 1;
}

.col--vcent {
	align-self: center; // Warning: will cause height to shrink to content
}

.col--bottom {
	align-self: flex-end; // Warning: will cause height to shrink to content
}

// Use this class to contain .col-* elements. Apply directly on .col-* elements to nest columns -- otherwise,
// margins will disrupt alignment.
.wrapper {
	@include hmargin(auto); // horizontally center in browser
	display: flex;
	flex-wrap: wrap;
	max-width: $hp-maxwidth;

	& & {
		align-content: flex-start;
		// @include hmargin(0);
		// @include hpad(0);
		// max-width: 100%;
		// display: flex;
		// flex-wrap: wrap;
	}

	& > hr {
		@include hmargin($hp-gutter);
		width: calc(100% - #{$hp-gutter*2});
	}


	&--space-between {
		justify-content: space-between;
	}
	&--vcenter {
		align-items: center;
	}
	&--vbottom {
		align-items: flex-end;
	}
	&--hcenter {
		justify-content: center;
	}
	&--hright {
		justify-content: flex-end;
	}
}

